import java.util.*;
import bwapi.*;
import bwta.BWTA;
import bwta.BaseLocation;

public class Pinfel_Bot extends DefaultBWListener {
	public static void main(String[] args) {
		new Pinfel_Bot().run();
	}
	
	private Mirror mirror = new Mirror();
	private Game game;
	private Player self;
	public void run() {
		mirror.getModule().setEventListener(this);
		mirror.startGame();
	}	
	
	//contain all minerals that are within range of an ally nexus
	Set<Unit> baseMinerals = new HashSet<Unit>();
	
	@Override
	public void onStart() {
		game = mirror.getGame();
		self = game.self();
		game.setLocalSpeed(20);
		game.setLatCom(false);
		
		BWTA.readMap();
		BWTA.analyze();		
	}
	
	@Override
	public void onFrame() {
		for (Unit myUnit : self.getUnits()) {
	        if (myUnit.getType() == UnitType.Protoss_Nexus) {
	            for (Unit neutralUnit : game.getNeutralUnits()) {
	                if (neutralUnit.getType() == UnitType.Resource_Mineral_Field) {
	                    if (myUnit.getDistance(neutralUnit.getPosition()) < 300) {
	                        baseMinerals.add(neutralUnit);
	                    }
	                }
	            }
	            
	            if (self.minerals() >= 50 && game.getFrameCount() - myUnit.getLastCommandFrame() > 3 && !myUnit.isTraining()) {
	            	myUnit.build(UnitType.Protoss_Probe);
	            }
	        }
	        
	        if (myUnit.getType() == UnitType.Protoss_Probe) {
	            if (myUnit.isIdle()) {
	            	for (Unit minerals : baseMinerals) {
	            		myUnit.gather(minerals);
	            		baseMinerals.remove(minerals);
	            		break;
	            	}
	            }
	            
	            if (self.allUnitCount(UnitType.Protoss_Pylon)*8 + self.allUnitCount(UnitType.Protoss_Nexus)*9 - (self.supplyUsed()/2 + self.allUnitCount(UnitType.Protoss_Nexus)
	            	+ self.allUnitCount(UnitType.Protoss_Gateway)*3) <= 0) {
	            	for (int x = 0; x <= 40; x++) {
	            		for (int y = 0; y <= 40; y++) {
	            			TilePosition pylonPlacement = new TilePosition (x, y);
	            		}
	            	}
	            }
	        }
	    }
	}	
}
